1. What is the maven build lifecycle?
Ans) maven is based around the central concept of a build lifecycle. What this means is that the process for
building and distributing a particular artifact(project) is clearly defined. for the person building a project,
this means that it is only necessary to learn a small set of commands to build any maven project,
and the POM will ensure they get the results they desire.

There are three built-in build lifecycles: default, clean and site.
The default lifecycle handles your project deployment, the clean lifecycle handles project cleaning, while the
site lifecycle handles the creation of your project's site documentation.

Each of these build lifecycles is defined by a different list of build phases.
A build phase represents a stage in the lifecycle.

The Maven Default LifeCycle
The default lifecycle comprises of the following main  phases(not all phases are listed here - just the main ones).

Validate -> Validates the project is correct and all necessary information is available.
compile  -> Compiles the source code of the project
test     -> Tests the compiled source code using a unit testing framework (JUnit for example)
package  -> Packages code in distributable format(eg. JAR)
verify   -> Run any checks on the results of integration tests
install  -> Install he package tho the local  repository for use in other projects locally.
deploy   -> Copies package to remote repository for sharing with other developers and projects(Done in the build env)




Maven Plugins :-
Maven is really just a core framework of a collection of maven plugins.
in other words, plugins are where most of the real action occurs, plugins are used to :
create jar files, create war files, compile code, unit test code, create project documentation, and on and on.
Almost any action that you can think of performing on a project is implemented as a maven plugin.


In Maven, there are build and reporting plugins:
    Build plugins will be executed during the build, they should be configured in the <build/> element.
    Reporting plugins will be executed during the site generation and they should be configured in the <reporting/> element.


Maven Plugins and Goals:
* All plugins should have minimal required information: groupId, artifactId and version.
* When ever you want to customise the build for a maven project, this is done by adding or re-configuring plugins.
* Plugins are artifacts that provide Goals to Maven.
* A plugin may have one or more Goals where each goal represents a capability of that plugin.
For Example:-
            The compiler plugin has two goals: compile and testCompile
The Compile goal compiles the source code of your main code.
The testCompile goal compiles the source code of your test code.
